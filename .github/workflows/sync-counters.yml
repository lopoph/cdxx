name: Sync Counters
on:
  # 定时同步（每5分钟）
  schedule:
    - cron: '*/5 * * * *'
  # 手动触发
  workflow_dispatch:
  # 通过API触发（点赞时调用）
  repository_dispatch:
    types: [update_counters]

permissions:
  contents: write

jobs:
  update-counters:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup counters directory
        run: mkdir -p data

      - name: Read current counters
        id: get-counters
        run: |
          if [ -f "data/counters.json" ]; then
            visits=$(jq -r '.visits' data/counters.json)
            likes=$(jq -r '.likes' data/counters.json)
          else
            visits=1
            likes=0
          fi
          echo "visits=$visits" >> $GITHUB_OUTPUT
          echo "likes=$likes" >> $GITHUB_OUTPUT

      - name: Process updates
        id: process-updates
        run: |
          # 处理点赞更新（从事件载荷获取）
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            event_type="${{ github.event.client_payload.type }}"
            if [ "$event_type" = "like" ]; then
              new_likes=$((${{ steps.get-counters.outputs.likes }} + 1))
              echo "new_likes=$new_likes" >> $GITHUB_OUTPUT
              echo "updated_type=like" >> $GITHUB_OUTPUT
            elif [ "$event_type" = "visit" ]; then
              new_visits=$((${{ steps.get-counters.outputs.visits }} + 1))
              echo "new_visits=$new_visits" >> $GITHUB_OUTPUT
              echo "updated_type=visit" >> $GITHUB_OUTPUT
            fi
          else
            # 定时同步，不做修改
            echo "new_visits=${{ steps.get-counters.outputs.visits }}" >> $GITHUB_OUTPUT
            echo "new_likes=${{ steps.get-counters.outputs.likes }}" >> $GITHUB_OUTPUT
          fi

      - name: Update counters file
        run: |
          cat > data/counters.json << EOF
          {
            "visits": ${{ steps.process-updates.outputs.new_visits }},
            "likes": ${{ steps.process-updates.outputs.new_likes }},
            "updated": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
            "lastUpdateType": "${{ steps.process-updates.outputs.updated_type || 'scheduled' }}"
          }
          EOF
          echo "更新计数器: visits=${{ steps.process-updates.outputs.new_visits }}, likes=${{ steps.process-updates.outputs.new_likes }}"

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/counters.json
          git diff --quiet && git diff --staged --quiet || git commit -m "🔄 更新计数器: ${{ steps.process-updates.outputs.updated_type || '定时同步' }} [skip ci]"
          git push
